<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.flab.marketgola.product.mapper.DisplayProductMapper">
  <select id="findById" resultMap="findById">
    select dp.id                     as dp_id,
           dp.name                   as dp_name,
           dp.description_image_name as dp_description_image_name,
           dp.main_image_name        as dp_main_image_name,
           dp.product_category_id    as dp_product_category_id,
           p.id                      as p_id,
           p.name                    as p_name,
           p.price                   as p_price,
           p.stock                   as p_stock,
           p.is_deleted              as p_is_deleted,
           p.display_product_id      as p_display_product_id,
           pc.id                     as pc_id,
           pc.name                   as pc_name,
           pc2.name                  as pc_parent_category_name
    from display_product as dp
           left outer join product as p on dp.id = p.display_product_id
           left outer join product_category as pc on dp.product_category_id = pc.id
           left outer join product_category as pc2 on pc.parent_id = pc2.id
    where dp.id = #{id}
      and p.is_deleted != true
  </select>

  <resultMap id="findById" type="DisplayProduct">
    <id property="id" column="dp_id"/>
    <result property="name" column="dp_name"/>
    <result property="descriptionImageName" column="dp_description_image_name"/>
    <result property="mainImageName" column="dp_main_image_name"/>
    <association property="category" javaType="ProductCategory">
      <id property="id" column="pc_id"/>
      <result property="name" column="pc_name"/>
      <association property="parentCategory" javaType="ProductCategory">
        <id property="name" column="pc_parent_category_name"/>
      </association>
    </association>
    <collection property="products" ofType="Product">
      <id property="id" column="p_id"/>
      <result property="name" column="p_name"/>
      <result property="price" column="p_price"/>
      <result property="stock" column="p_stock"/>
      <result property="isDeleted" column="p_is_deleted"/>
    </collection>
  </resultMap>

  <insert id="insert" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
    insert into display_product (name, description_image_name, main_image_name, product_category_id)
    values (#{name}, #{descriptionImageName}, #{mainImageName}, #{category.id})
  </insert>

  <update id="update">
    update display_product dp
    <set>
      <if test="name != null">dp.name=#{name},</if>
      <if test="mainImageName != null">dp.main_image_name=#{mainImageName},</if>
      <if test="descriptionImageName != null">dp.description_image_name=#{descriptionImageName},
      </if>
      <if test="category != null">dp.product_category_id=#{category.id},</if>
    </set>
    where dp.id = #{id}
    and exists
    (select p.id from product p where p.display_product_id = dp.id and p.is_deleted != true)
  </update>

  <select id="findByCategoryId" resultMap="findByCategoryId">
    select dp.id                                                                            as id,
           dp.name                                                                          as name,
           dp.main_image_name                                                               as mainImageName,
           MIN(p.price)                                                                     as price,
           dp.created_at                                                                    as created_at,
           (select count(*) from display_product where product_category_id = #{categoryId}) as total
    from display_product as dp
           inner join product as p on dp.id = p.display_product_id
    where dp.product_category_id = #{categoryId}
      and p.is_deleted = false
    group by dp.id
    order by ${condition.sortType.sqlValue}
    limit #{condition.perPage} offset #{condition.offset}
  </select>

  <resultMap id="findByCategoryId" type="DisplayProductListDto">
    <result property="total" column="total"/>
    <collection property="displayProducts" ofType="DisplayProduct">
      <id property="id" column="id"/>
      <result property="name" column="name"/>
      <result property="mainImageName" column="mainImageName"/>
      <result property="price" column="price"/>
      <result property="createdAt" column="created_at"/>
    </collection>
  </resultMap>
</mapper>