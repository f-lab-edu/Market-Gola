<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.flab.marketgola.user.mapper.UserMapper">

  <select id="findByLoginId" resultType="User">
    select id,
           name,
           login_id,
           password,
           email,
           phone_number,
           birth,
           gender
    from `USER`
    where login_id = #{loginId}
  </select>

  <select id="findByEmail" resultType="User">
    select id,
           name,
           login_id,
           password,
           email,
           phone_number,
           birth,
           gender
    from `USER`
    where email = #{email}
  </select>

  <select id="findByPhoneNumber" resultType="User">
    select id,
           name,
           login_id,
           password,
           email,
           phone_number,
           birth,
           gender
    from `USER`
    where phone_number = #{phoneNumber}
  </select>

  <select id="findByCondition" resultType="User">
    select id,
    name,
    login_id,
    password,
    email,
    phone_number
    from `USER`
    <where>
      <if test="loginId != null">and login_id = #{loginId}</if>
      <if test="email != null">and email = #{email}</if>
      <if test="phoneNumber != null">and phone_number = #{phoneNumber}</if>
    </where>
  </select>

  <insert id="insert" useGeneratedKeys="true" keyProperty="id">
    insert into `USER` (login_id, password, name, email, phone_number, gender, birth)
    values (#{loginId}, #{password}, #{name}, #{email}, #{phoneNumber}, #{gender}, #{birth})
  </insert>

  <update id="update">
    update `USER`
    <set>
      <if test="updateParam.name != null">name=#{updateParam.name},</if>
      <if test="updateParam.password != null">password=#{updateParam.password},</if>
      <if test="updateParam.email != null">email=#{updateParam.email},</if>
      <if test="updateParam.phoneNumber != null">phone_number=#{updateParam.phoneNumber},</if>
      <if test="updateParam.birth != null">birth=#{updateParam.birth},</if>
      <if test="updateParam.gender != null">gender=#{updateParam.gender},</if>
    </set>
    where id = #{id}
  </update>

  <delete id="delete">
    delete
    from `USER`
    where id = #{id}
  </delete>
</mapper>

